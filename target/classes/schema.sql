-- Database schema for Exception Workflow System

-- Create EXCEPTION_WORKFLOW table
CREATE TABLE IF NOT EXISTS EXCEPTION_WORKFLOW (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    EXCEPTION_ID VARCHAR(250),
    EQUITY_CLASS_TYPE VARCHAR(250),
    REGULATOR VARCHAR(250),
    AGING INTEGER,
    AS_OF_TIME TIMESTAMP,
    BB_UNDERLYING VARCHAR(250),
    ESM_SECURITY_TYPE VARCHAR(50),
    INSTRUMENT_ID BIGINT,
    INSTRUMENT_NAME VARCHAR(250),
    INSTRUMENT_TYPE VARCHAR(50),
    LEGAL_ENTITY VARCHAR(50),
    LOOK_THROUGH VARCHAR(50),
    POSITION_AV VARCHAR(1000),
    POSITION_QTY BIGINT,
    POSITION_TBBB_CLASSIFICATION VARCHAR(250),
    PROCESSED_ON TIMESTAMP,
    SDS_BOOK_CODE BIGINT,
    SDS_BOOK_PATH VARCHAR(1000),
    SOD_DELTA_BB_UNDERLYING VARCHAR(1000),
    STATUS VARCHAR(50),
    SYSTEM VARCHAR(50),
    REASON CLOB,
    ORIGINAL_QTY DECIMAL(19,2),
    CATEGORY_ID BIGINT,
    SOURCE VARCHAR(255),
    TETB_AV VARCHAR(1000),
    TETB_QUANTITY DECIMAL(19,2),
    LEVEL_1 VARCHAR(50),
    LEVEL_2 VARCHAR(50),
    LEVEL_3 VARCHAR(50),
    LEVEL_4 VARCHAR(50),
    LEVEL_5 VARCHAR(50),
    LEVEL_6 VARCHAR(50),
    LEVEL_7 VARCHAR(50),
    ACTION_OWNER VARCHAR(255),
    REPORTING_CCY VARCHAR(5)
);

-- Create WORKFLOW_METADATA table
CREATE TABLE IF NOT EXISTS WORKFLOW_METADATA (
    WORKFLOW_ID BIGINT,
    STEP_CODE VARCHAR(100),
    STEP_NAME VARCHAR(255),
    ROLE VARCHAR(100),
    ACTIONS_ALLOWED VARCHAR(1000),
    NEXT_STEP_ON_APPROVE VARCHAR(1000),
    NEXT_STEP_ON_REJECT VARCHAR(1000),
    DESCRIPTION VARCHAR(500),
    PRIMARY KEY (WORKFLOW_ID, STEP_CODE)
);

-- Create WORKFLOW_INSTANCE table
CREATE TABLE IF NOT EXISTS WORKFLOW_INSTANCE (
    INSTANCE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    EXCEPTION_ID VARCHAR(250),
    WORKFLOW_ID BIGINT,
    CURRENT_STEP VARCHAR(100),
    STATUS VARCHAR(50),
    ASSIGNED_TO_BRID VARCHAR(50),
    LAST_UPDATED TIMESTAMP,
        SLA_HOURS INTEGER,
        EMAIL_TEMPLATE_ID BIGINT,
    TRIGGER_ON VARCHAR(50),
        EMAIL_STATUS VARCHAR(50),
    EMAIL_SENT_ON TIMESTAMP,
    COMMENTS CLOB
);

-- Create WORKFLOW_SLA_CONFIG table
CREATE TABLE IF NOT EXISTS WORKFLOW_SLA_CONFIG (
    WORKFLOW_ID BIGINT,
    STEP_CODE VARCHAR(100),
    SLA_HOURS INTEGER,
    EMAIL_TEMPLATE_ID BIGINT,
    TRIGGER_ON VARCHAR(50),
    PRIMARY KEY (WORKFLOW_ID, STEP_CODE)
);

-- Create EXCEPTION_ACCESS table
CREATE TABLE IF NOT EXISTS EXCEPTION_ACCESS (
    EXCEPTION_ACCESS_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    ROLE VARCHAR(100),
    BRID VARCHAR(50),
    PRODUCT_AREA VARCHAR(50),
    BUSINESS_AREA VARCHAR(50)
);

-- Create USER_INFO table
CREATE TABLE IF NOT EXISTS USER_INFO (
    USER_ID VARCHAR(50) PRIMARY KEY,
    BRID VARCHAR(50),
    DISPLAY_NAME VARCHAR(200),
    EMAIL_ID VARCHAR(300),
    TYPE VARCHAR(200),
    IS_ACTIVE INTEGER,
    CREATED_AT TIMESTAMP,
    UPDATED_AT TIMESTAMP
);


-- Create USER_INFO table
CREATE TABLE IF NOT EXISTS USER_INFO_TYPE (
    BRID VARCHAR(50),
    ROLE VARCHAR(200)
);

-- Create EMAIL_TEMPLATE table
CREATE TABLE IF NOT EXISTS EMAIL_TEMPLATE (
    TEMPLATE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    TEMPLATE_NAME VARCHAR(255),
    SUBJECT VARCHAR(500),
    BODY CLOB
);



-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS IDX_EXCEPTION_WORKFLOW_EXCEPTION_ID ON EXCEPTION_WORKFLOW(EXCEPTION_ID);
CREATE INDEX IF NOT EXISTS IDX_WORKFLOW_INSTANCE_EXCEPTION_ID ON WORKFLOW_INSTANCE(EXCEPTION_ID);
CREATE INDEX IF NOT EXISTS IDX_WORKFLOW_INSTANCE_ASSIGNED_TO ON WORKFLOW_INSTANCE(ASSIGNED_TO_BRID);
CREATE INDEX IF NOT EXISTS IDX_EXCEPTION_ACCESS_ROLE ON EXCEPTION_ACCESS(ROLE);
CREATE INDEX IF NOT EXISTS IDX_USER_INFO_BRID ON USER_INFO(BRID);

